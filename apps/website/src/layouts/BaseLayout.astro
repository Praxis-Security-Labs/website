---
import '../styles/globals.css';
import { Header } from '../components/layout/Header';
import { Footer } from '../components/layout/Footer';

export interface Props {
  title: string;
  description?: string;
  keywords?: string;
  ogImage?: string;
  ogType?: string;
  canonicalUrl?: string;
  noIndex?: boolean;
  lang?: string;
  structuredData?: Record<string, unknown>;
  pageType?:
    | 'homepage'
    | 'content'
    | 'segment'
    | 'product'
    | 'contact'
    | 'about'
    | 'resources'
    | 'segment-index';
}

const {
  title,
  description = 'Praxis Navigator helps organizations measure and improve security culture through continuous behavioral monitoring and personalized training.',
  keywords = 'security culture, behavioral monitoring, security training, cybersecurity awareness, security metrics, CISO tools, security leadership',
  ogImage = '/images/og-praxis-navigator-default.png',
  ogType = 'website',
  canonicalUrl,
  noIndex = false,
  lang = 'en',
  structuredData,
  pageType = 'content',
} = Astro.props;

// Get current path for navigation
const currentPath = Astro.url.pathname;

// Determine if this is Norwegian content
const isNorwegian = lang === 'no' || currentPath.startsWith('/no');
const currentLanguage = isNorwegian ? 'no' : 'en';

// Set up canonical URL
const finalCanonicalUrl = canonicalUrl || Astro.url.href;

// Default Norwegian translations for common meta content
const norwegianDefaults = {
  description:
    'Praxis Navigator hjelper organisasjoner med å måle og forbedre sikkerhetskultur gjennom kontinuerlig atferdsovervåking og personalisert trening.',
  keywords:
    'sikkerhetskultur, atferdsovervåking, sikkerhetstrening, cybersikkerhet bevissthet, sikkerhetsmetrikker, CISO verktøy, sikkerhetsledelse',
};

const finalDescription =
  isNorwegian &&
  description ===
    'Praxis Navigator helps organizations measure and improve security culture through continuous behavioral monitoring and personalized training.'
    ? norwegianDefaults.description
    : description;

const finalKeywords =
  isNorwegian &&
  keywords ===
    'security culture, behavioral monitoring, security training, cybersecurity awareness, security metrics, CISO tools, security leadership'
    ? norwegianDefaults.keywords
    : keywords;

// Structured data for organization
const organizationSchema = {
  '@context': 'https://schema.org',
  '@type': 'Organization',
  name: 'Praxis Navigator',
  url: 'https://praxisnavigator.io',
  logo: 'https://praxisnavigator.io/images/praxis-navigator-logo.png',
  description: finalDescription,
  founder: {
    '@type': 'Person',
    name: 'Kai Roer',
  },
  contactPoint: {
    '@type': 'ContactPoint',
    contactType: 'customer service',
    email: 'contact@praxisnavigator.io',
  },
  sameAs: [
    'https://www.linkedin.com/company/praxis-navigator',
    'https://twitter.com/praxisnavigator',
  ],
};
---

<!doctype html>
<html lang={currentLanguage} class="h-full">
  <head>
    <!-- Basic Meta Tags -->
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={finalDescription} />
    <meta name="keywords" content={finalKeywords} />

    <!-- Robots Meta -->
    {noIndex && <meta name="robots" content="noindex, nofollow" />}

    <!-- Canonical URL -->
    <link rel="canonical" href={finalCanonicalUrl} />

    <!-- Language Alternate URLs -->
    {
      currentLanguage === 'en' ? (
        <link
          rel="alternate"
          hreflang="no"
          href={`${Astro.site}no${currentPath === '/' ? '' : currentPath}`}
        />
      ) : (
        <link
          rel="alternate"
          hreflang="en"
          href={`${Astro.site}${currentPath.replace('/no', '') || '/'}`}
        />
      )
    }
    <link
      rel="alternate"
      hreflang="x-default"
      href={`${Astro.site}${currentPath.replace('/no', '') || '/'}`}
    />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={ogType} />
    <meta property="og:url" content={finalCanonicalUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={finalDescription} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:site_name" content="Praxis Navigator" />
    <meta
      property="og:locale"
      content={currentLanguage === 'no' ? 'nb_NO' : 'en_US'}
    />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={finalCanonicalUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={finalDescription} />
    <meta property="twitter:image" content={ogImage} />
    <meta property="twitter:site" content="@praxisnavigator" />

    <!-- Additional Security Headers -->
    <meta http-equiv="X-Content-Type-Options" content="nosniff" />
    <meta http-equiv="X-Frame-Options" content="DENY" />
    <meta http-equiv="X-XSS-Protection" content="1; mode=block" />
    <meta
      http-equiv="Referrer-Policy"
      content="strict-origin-when-cross-origin"
    />

    <!-- Preconnect to external domains for performance -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

    <!-- Structured Data -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify(organizationSchema)}
    />
    {
      structuredData && (
        <script
          type="application/ld+json"
          is:inline
          set:html={JSON.stringify(structuredData)}
        />
      )
    }

    <!-- Cloudflare Web Analytics - GDPR Compliant (No Cookies) -->
    {
      import.meta.env.ASTRO_PUBLIC_CLOUDFLARE_ANALYTICS_TOKEN && (
        <script
          defer
          src="https://static.cloudflareinsights.com/beacon.min.js"
          data-cf-beacon={`{"token": "${import.meta.env.ASTRO_PUBLIC_CLOUDFLARE_ANALYTICS_TOKEN}"}`}
          is:inline
        />
      )
    }

    <!-- Skip Link Styles (for accessibility) -->
    <style>
      .skip-link {
        position: absolute;
        top: -40px;
        left: 6px;
        background: #013e75;
        color: white;
        padding: 8px;
        text-decoration: none;
        border-radius: 4px;
        z-index: 1000;
        font-weight: bold;
        transition: top 0.3s;
      }

      .skip-link:focus {
        top: 6px;
      }
    </style>
  </head>

  <body
    class={`h-full bg-praxis-white font-body text-praxis-black antialiased ${pageType === 'homepage' ? 'homepage' : ''}`}
  >
    <!-- Skip Navigation Link (Accessibility) -->
    <a
      href="#main-content"
      class="skip-link focus-ring"
      aria-label={currentLanguage === 'no'
        ? 'Hopp til hovedinnhold'
        : 'Skip to main content'}
    >
      {
        currentLanguage === 'no'
          ? 'Hopp til hovedinnhold'
          : 'Skip to main content'
      }
    </a>

    <div class="min-h-full flex flex-col">
      <!-- Header -->
      <Header
        currentPath={currentPath}
        currentLanguage={currentLanguage}
        client:load
      />

      <!-- Main Content -->
      <main id="main-content" class="flex-grow" role="main" tabindex="-1">
        <slot />
      </main>

      <!-- Footer -->
      <Footer currentLanguage={currentLanguage} />
    </div>

    <!-- Loading State Management -->
    <script>
      // Basic loading state management
      document.addEventListener('DOMContentLoaded', function () {
        // Remove any loading states
        document.body.classList.remove('loading');

        // Add page loaded class for CSS transitions
        document.body.classList.add('loaded');

        // Announce page load to screen readers
        const announcement = document.createElement('div');
        announcement.setAttribute('aria-live', 'polite');
        announcement.setAttribute('aria-atomic', 'true');
        announcement.className = 'sr-only';
        announcement.textContent =
          document.documentElement.lang === 'no'
            ? 'Side lastet'
            : 'Page loaded';
        document.body.appendChild(announcement);

        // Remove announcement after brief delay
        setTimeout(() => {
          document.body.removeChild(announcement);
        }, 1000);
      });

      // Handle navigation loading states
      document.addEventListener('beforeunload', function () {
        document.body.classList.add('loading');
      });

      // Focus management for skip link
      document
        .querySelector('.skip-link')
        ?.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector('#main-content') as HTMLElement;
          if (target) {
            target.focus();
            target.scrollIntoView({ behavior: 'smooth' });
          }
        });

      // Initialize analytics after Cloudflare Web Analytics loads
      if (typeof window !== 'undefined') {
        // Wait for Cloudflare Web Analytics to load
        const checkAnalytics = () => {
          if ((window as { __cfBeacon?: unknown }).__cfBeacon) {
            // Import and initialize monitoring systems
            Promise.all([
              import('../utils/analytics.js'),
              import('../utils/performance.js'),
              import('../utils/sentry.js'),
            ])
              .then(([analytics, performance, sentry]) => {
                // Initialize error tracking first
                sentry.initializeSentry();

                // Initialize analytics tracking
                analytics.initializeAnalytics();

                // Initialize Core Web Vitals monitoring
                performance.initializeCoreWebVitals();
                performance.setupPerformanceObserver();

                // Log performance report in development
                if (import.meta.env.MODE === 'development') {
                  setTimeout(() => {
                    // eslint-disable-next-line no-console
                    console.log(
                      'Performance Report:',
                      performance.generatePerformanceReport()
                    );
                  }, 3000);
                }
              })
              .catch(error => {
                // eslint-disable-next-line no-console
                console.error('Monitoring initialization error:', error);

                // Try to report to Sentry if available
                if (
                  typeof window !== 'undefined' &&
                  // eslint-disable-next-line @typescript-eslint/no-explicit-any
                  (window as any).Sentry
                ) {
                  // eslint-disable-next-line @typescript-eslint/no-explicit-any
                  (window as any).Sentry.captureException(error);
                }
              });
          } else {
            // Retry after a short delay
            setTimeout(checkAnalytics, 100);
          }
        };

        // Start checking after DOM is fully loaded
        setTimeout(checkAnalytics, 1000);
      }
    </script>

    <!-- Environment Status (Development Only) -->
    {
      import.meta.env.MODE === 'development' ? (
        <div class="fixed bottom-4 right-4 z-50">
          {/* This will be replaced by EnvironmentStatus component if needed */}
        </div>
      ) : null
    }
  </body>
</html>

<style>
  /* Screen reader only utility class */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Loading states */
  body.loading {
    cursor: wait;
  }

  body.loaded {
    animation: fadeIn 0.3s ease-in-out;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    body.loaded {
      animation: none;
    }

    .skip-link {
      transition: none;
    }

    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* High contrast support */
  @media (prefers-contrast: high) {
    .skip-link {
      border: 2px solid white;
    }
  }

  /* Focus management */
  main:focus {
    outline: none;
  }

  /* Smooth scrolling for supported browsers */
  @media (prefers-reduced-motion: no-preference) {
    html {
      scroll-behavior: smooth;
    }
  }
</style>
